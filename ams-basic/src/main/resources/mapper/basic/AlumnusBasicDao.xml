<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.scu.ams.basic.dao.AlumnusBasicDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.scu.ams.basic.entity.AlumnusBasicEntity" id="alumnusBasicMap">
        <result property="id" column="id"/>
        <result property="aluName" column="alu_name"/>
        <result property="aluId" column="alu_id"/>
        <result property="gender" column="gender"/>
        <result property="idCard" column="id_card"/>
        <result property="nationality" column="nationality"/>
        <result property="politicalStatus" column="political_status"/>
        <result property="email" column="email"/>
        <result property="nativePlace" column="native_place"/>
        <result property="clazz" column="clazz"/>
        <result property="admissionTime" column="admission_time"/>
        <result property="graduationTime" column="graduation_time"/>
        <result property="major" column="major"/>
        <result property="degreeStage" column="degree_stage"/>
        <result property="phoneNum" column="phone_num"/>
        <result property="city" column="city"/>
        <result property="workUnit" column="work_unit"/>
        <result property="jobTitle" column="job_title"/>
        <result property="enterpriseProperty" column="enterprise_property"/>
        <result property="note" column="note"/>
        <result property="aluStatus" column="alu_status"/>
        <result property="password" column="password"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    <update id="updateByAluId">
        UPDATE alumnus_basic
        SET gender = #{alumnusBasic.gender},
            alu_name = #{alumnusBasic.aluName},
            political_status = #{alumnusBasic.politicalStatus},
            id_card = #{alumnusBasic.idCard},
            native_place = #{alumnusBasic.nativePlace},
            nationality = #{alumnusBasic.nationality},
            email = #{alumnusBasic.email},
            clazz = #{alumnusBasic.clazz},
            admission_time = #{alumnusBasic.admissionTime},
            graduation_time = #{alumnusBasic.graduationTime},
            degree_stage = #{alumnusBasic.degreeStage},
            major = #{alumnusBasic.major},
            enterprise_property = #{alumnusBasic.enterpriseProperty},
            phone_num = #{alumnusBasic.phoneNum},
            city = #{alumnusBasic.city},
            note = #{alumnusBasic.note},
            work_unit = #{alumnusBasic.workUnit},
            job_title = #{alumnusBasic.jobTitle}
        WHERE alu_id = #{alu_id}
    </update>
    <select id="enterpriseCount" resultType="java.util.Map">
        SELECT enterprise_property AS 'key', COUNT(*) AS value
        FROM alumnus_basic
        WHERE enterprise_property != '未知' and enterprise_property != '无'
        GROUP BY enterprise_property
    </select>
    <select id="nationalityCount" resultType="java.util.Map">
        SELECT nationality AS 'key', COUNT(*) AS value
        FROM alumnus_basic
        where nationality IS NOT NULL and nationality != ''
        GROUP BY nationality
    </select>
    <select id="majorCount" resultType="java.util.Map">
        SELECT major AS 'key',  COUNT(*) AS value
        FROM alumnus_basic
        WHERE major IS NOT NULL AND major != ''
        GROUP BY major
    </select>
    <select id="graduationCount" resultType="java.util.Map">
        SELECT YEAR(graduation_time) AS 'key',  COUNT(*) AS value
        FROM alumnus_basic
        WHERE graduation_time IS NOT NULL
        GROUP BY YEAR(graduation_time)
    </select>
    <select id="nativePlaceCount" resultType="java.util.Map">
        SELECT SUBSTRING(native_place, 1, 2) AS 'key', COUNT(*) AS 'value'
        FROM alumnus_basic
        WHERE native_place IS NOT NULL AND native_place != ''
        GROUP BY SUBSTRING(native_place, 1, 2)
        ORDER BY value DESC
        LIMIT 34
    </select>
    <select id="degreeStageCount" resultType="java.util.Map">
        SELECT degree_stage AS 'key',  COUNT(*) AS value
        FROM alumnus_basic
        WHERE degree_stage IS NOT NULL
        GROUP BY degree_stage
    </select>
    <select id="cityCount" resultType="java.util.Map">
        SELECT city AS 'key',  COUNT(*) AS value
        FROM alumnus_basic
        WHERE city IS NOT NULL AND city !=''
        GROUP BY city
        ORDER BY value DESC
        LIMIT 20
    </select>
    <!--    <select id="test" resultType="java.util.Map">-->
<!--        SELECT #{xx} AS 'key', COUNT(*) AS value-->
<!--        FROM alumnus_basic-->
<!--        GROUP BY #{xx}-->
<!--    </select>-->


</mapper>
